name: 'Widoco'
description: 'Generate documentation for an OWL ontology'
inputs:
  ontologyFile:
    description: 'Ontology File'
    required: true
    default: 'ontology.ttl'
  ontologyPrefix:
    description: 'Ontology Prefix'
    required: true
    default: 'yourontology'
  ontologyIRI:
    description: 'Ontology IRI'
    required: true
    default: 'https://ekgf.github.io/yourrepo/ontology#'
  revisionNumber:
    description: 'Ontology Revision Number'
    required: false
    default: '0.1'
  citeAs:
    description: 'Ontology Title'
    required: false
    default: 'Your Ontology'

runs:
  using: "composite"
  steps:
    - run: echo Hello ${{ inputs.who-to-greet }}.
      shell: bash
    - id: random-number-generator
      run: echo "::set-output name=random-id::$(echo $RANDOM)"
      shell: bash
    - run: ${{ github.action_path }}/goodbye.sh
      shell: bash

    #
    # Install the right JVM to run Widoco with
    #
    - name: Install the JVM
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '8'

    #
    # Get the version number of the latest widoco jar
    #
    - name: Get widoco version
      id: widocoRelease
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        owner: dgarijo
        repo: WIDOCO
        excludes: prerelease, draft

    #
    # Remove the 'v' from the Widoco release number (to be used to contruct the file name of the jar)
    #
    - name: Strip v from version
      id: widocoRelease2
      run: |
        echo "widoco release: ${{ steps.widocoRelease.outputs.release }}"
        releaseWithVictor="${{ steps.widocoRelease.outputs.release }}"
        releaseWithoutVictor="${releaseWithVictor/v/}"
        echo "::set-output name=release::${releaseWithoutVictor}"

    #
    # Download the latest widoco jar
    #
    - name: Download widoco.jar
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: "dgarijo/WIDOCO"
        version: "tags/${{ steps.widocoRelease.outputs.release }}"
        file: "widoco-${{ steps.widocoRelease2.outputs.release }}-jar-with-dependencies.jar"
        target: "widoco.jar"
        token: ${{ secrets.GITHUB_TOKEN }}

    #
    # Create widoco config
    #
    - name: Create widoco config
      run: |
        mkdir ./config || true
        echo "ontologyPrefix=${{ inputs.ontologyPrefix }}" > config/config.properties
        echo "ontologyNamespaceURI=${{ inputs.ontologyIRI }}" >> config/config.properties
        echo "dateOfRelease=$(date '+%d %B %Y')" >> config/config.properties
        echo "thisVersionURI=${{ inputs.ontologyNamespaceIRI }}" >> config/config.properties
        echo "latestVersionURI=${{ inputs.ontologyNamespaceIRI }}" >> config/config.properties
        #echo "previousVersionURI=http://example.org/previousVersion
        echo "ontologyRevisionNumber=${{ inputs.revisionNumber }}" >> config/config.properties
        #echo "authors=First Author;Second Author
        #echo "authorsURI=http://example.org/author1;http://example.org/author2
        echo "authorsInstitution=agnos.ai;EKFG" >> config/config.properties
        #echo "contributors=First contributor;Second contributor
        #echo "contributorsURI=http://example.org/contributor1;http://example.org/contributor2
        #echo "contributorsInstitution=First contributor institution;Second contributor institution
        echo "publisher=EKGF" >> config/config.properties
        echo "publisherURI=https://ekgf.org" >> config/config.properties
        #echo "importedOntologyNames=Imported Ontology 1; Imported Ontology 2
        #echo "importedOntologyURIs=http://example.org/test11; http://example.org/test22
        #echo "extendedOntologyNames=test1; test2
        #echo "extendedOntologyURIs=http://example.org/test1; http://example.org/test2
        echo "licenseName=Creative Commons Attribution-ShareAlike 4.0 International License" >> config/config.properties
        echo "licenseURI=http://creativecommons.org/licenses/by-sa/4.0/" >> config/config.properties
        echo "licenseIconURL=https://img.shields.io/github/license/EKGF/o-ux.svg" >> config/config.properties
        echo "citeAs=${{ inputs.citeAs }}" >> config/config.properties
        echo "status=Ontology Draft" >> config/config.properties
        echo "RDFXMLSerialization=https://ekgf.github.io/o-ux/ontology.owl" >> config/config.properties
        echo "TurtleSerialization=https://ekgf.github.io/o-ux/ontology.ttl" >> config/config.properties
        echo "N3Serialization=https://ekgf.github.io/o-ux/ontology.n3" >> config/config.properties
        echo "JSONLDSerialization=https://ekgf.github.io/o-ux/ontology.json" >> config/config.properties
        echo "Config Properties:"
        cat config/config.properties

    #
    # Run widoco
    #
    - name: Run Widoco
      run: |
        echo "Root Directory:"
        ls -al
        ls -al ./config
        echo "Start Widoco:"
        java \
          -jar ./widoco.jar \
          -confFile ./config/config.properties \
          -getOntologyMetadata \
          -ontFile ${{ inputs.ontologyFile }} \
          -outFolder ./html \
          -rewriteAll \
          -ignoreIndividuals \
          -uniteSections \
          -oops \
          -webVowl

    - name: Do some renames
      run: |
        cp LICENSE ./html
        cd html
        rm readme.md
        echo "Before the renames:"
        find .
        echo "Rename index-en.html to index.html:"
        grep -RIl 'index-en.html' | xargs sed -i 's/index-en.html/index.html/g'
        echo "Rename OOPSEvaluation/OOPSeval to OOPSevaluation/oopsEval:"
        grep -RiIl 'OOPSEvaluation/OOPSeval' | xargs sed -i 's@OOPSEvaluation/OOPSeval@OOPSevaluation/oopsEval@g'
        mv index-en.html index.html
        echo "Now also copy the ontology file to 'component' so that the URL ${{ inputs.ontologyNamespaceIRI }} works"
        cp ontology.ttl component
        echo "After the renames:"
        find .
