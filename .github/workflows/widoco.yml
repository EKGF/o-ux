name: Widoco

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  widoco:
    runs-on: ubuntu-latest
    steps:
      #
      # Checkout the repo
      #
      - name: Checkout the repo
        uses: actions/checkout@v2

      #
      # Install the right JVM to run Widoco with
      #
      - name: Install the JVM
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'

      #
      # Get the version number of the latest widoco jar
      #
      - name: Get widoco version
        id: widocoRelease
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: dgarijo
          repo: WIDOCO
          excludes: prerelease, draft

      #
      # Remove the 'v' from the Widoco release number (to be used to contruct the file name of the jar)
      #
      - name: Strip v from version
        id: widocoRelease2
        run: |
          echo "widoco release: ${{ steps.widocoRelease.outputs.release }}"
          releaseWithVictor="${{ steps.widocoRelease.outputs.release }}"
          releaseWithoutVictor="${releaseWithVictor/v/}"
          echo "::set-output name=release::${releaseWithoutVictor}"

      #
      # Download the latest widoco jar
      #
      - name: Download widoco.jar
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: "dgarijo/WIDOCO"
          version: "tags/${{ steps.widocoRelease.outputs.release }}"
          file: "widoco-${{ steps.widocoRelease2.outputs.release }}-jar-with-dependencies.jar"
          target: "widoco.jar"
          token: ${{ secrets.GITHUB_TOKEN }}

      #
      # Create widoco config
      #
      - name: Create widoco config
        run: |
            mkdir config || true
            echo "ontologyPrefix=ekgux" > config/config.properties
            #echo "ontologyNamespaceURI=http://purl.org/net/p-plan#"
            echo "dateOfRelease=$(date '+%d %B %Y')" >> config/config.properties
            #echo "thisVersionURI=http://purl.org/net/p-plan"
            #echo "latestVersionURI=http://example.org/latestVersion
            #echo "previousVersionURI=http://example.org/previousVersion
            #echo "ontologyRevisionNumber=1.0
            #echo "authors=First Author;Second Author
            #echo "authorsURI=http://example.org/author1;http://example.org/author2
            echo "authorsInstitution=agnos.ai;EKFG" >> config/config.properties
            #echo "contributors=First contributor;Second contributor
            #echo "contributorsURI=http://example.org/contributor1;http://example.org/contributor2
            #echo "contributorsInstitution=First contributor institution;Second contributor institution
            echo "publisher=EKGF" >> config/config.properties
            echo "publisherURI=https://ekgf.org" >> config/config.properties
            #echo "importedOntologyNames=Imported Ontology 1; Imported Ontology 2
            #echo "importedOntologyURIs=http://example.org/test11; http://example.org/test22
            #echo "extendedOntologyNames=test1; test2
            #echo "extendedOntologyURIs=http://example.org/test1; http://example.org/test2
            echo "licenseName=Creative Commons Attribution-ShareAlike 4.0 International License" >> config/config.properties
            echo "licenseURI=http://creativecommons.org/licenses/by-sa/4.0/" >> config/config.properties
            echo "licenseIconURL=https://img.shields.io/github/license/EKGF/o-ux.svg" >> config/config.properties
            echo "citeAs=EKG/UX Component Ontology" >> config/config.properties
            echo "status=Ontology Draft" >> config/config.properties
            #echo "RDFXMLSerialization=https://ekgf.github.io/o-ux/ontology.xxx"
            echo "TurtleSerialization=https://ekgf.github.io/o-ux/ontology.owl" >> config/config.properties
            echo "N3Serialization=https://ekgf.github.io/o-ux/ontology.n3" >> config/config.properties
            echo "JSONLDSerialization=https://ekgf.github.io/o-ux/ontology.json" >> config/config.properties
            echo "Config Properties:"
            cat config/config.properties

      #
      # Run widoco
      #
      - name: Run Widoco
        run: |
          echo "Root Directory:"
          ls -al
          echo "Start Widoco:"
          java \
            -jar widoco.jar \
            -confFile config/config.properties \
            -ontFile ux-component.owl \
            -outFolder ./html \
            -rewriteAll \
            -ignoreIndividuals \
            -doNotDisplaySerializations \
            -uniteSections \
            -oops \
            -webVowl \
            -licensius

      - name: Do some renames
        run: |
          cp LICENSE ./html
          cd html
          rm readme.md
          echo "Before the renames:"
          find .
          echo "Rename index-en.html to index.html:"
          grep -RIl 'index-en.html' | xargs sed -i 's/index-en.html/index.html/g'
          # grep -RIl 'ontology.ttl' | xargs sed -i 's/ontology.ttl/ontology.owl/g'
          echo "Rename OOPSEvaluation/OOPSeval to OOPSevaluation/oopsEval:"
          grep -RiIl 'OOPSEvaluation/OOPSeval' | xargs sed -i 's@OOPSEvaluation/OOPSeval@OOPSevaluation/oopsEval@g'
          mv index-en.html index.html
          mv ontology.ttl ontology.owl
          echo "After the renames:"
          find .

      - name: Deploy site
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: html # The folder the action should deploy.
          single-commit: true